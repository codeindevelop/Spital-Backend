name: "Spital-Backend"
# Network
networks:
  spitalnet:
    external: true

# Volumes
volumes:
  postgres:
    driver: local
  pgadmin:
    driver: local
  storage:
    driver: local


services:

  ####################################################################################################
  # app
  ####################################################################################################
  app-backend:
    build:
      args:
        user: www
        uid: 1000
      context: ./development/docker
      dockerfile: Dockerfile
    image: "${APP_IMAGE_NAME}"
    container_name: "${APP_CONTAINER_NAME}"
    restart: "${APP_RESTART}"
    environment:
      VIRTUAL_HOST: "${VIRTUAL_HOST}"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ~/.ssh:/root/.ssh
    depends_on:
      - mysql-spital
      - phpmyadmin-spital
      - redis-spital
    networks:
      - spitalnet


    ####################################################################################################
    # Postgres
    ####################################################################################################
    postgres-spital:
      image: ${POSTGRES_IMAGE:-postgres}
      container_name: ${POSTGRES_CONTAINER_NAME:-postgres_container}
      hostname: ${POSTGRES_HOSTNAME}
      environment:
        POSTGRES_USER: ${POSTGRES_USER:-postgres}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
        POSTGRES_DB: ${POSTGRES_DB}
        PGDATA: /data/postgres
      volumes:
        - postgres:/data/postgres
      ports:
        - "${POSTGRES_PORT}:5432"
      networks:
        - spitalnet
      restart: ${POSTGRES_RESTART:-always}

      ####################################################################################################
      # pgAdmin
      ####################################################################################################

    pgadmin-spital:
      image: ${PGADMIN_IMAGE}
      container_name: ${PGADMIN_CONTAINER_NAME}
      hostname: ${PGADMIN_HOSTNAME}
      # Use the environment variables for pgAdmin configuration
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        PGADMIN_CONFIG_SERVER_MODE: "False"
      volumes:
        - pgadmin:/var/lib/pgadmin

      ports:
        - "${PGADMIN_PORT}:80"
      networks:
        - spitalnet
      restart:
        ${PGADMIN_RESTART:-always}



      ####################################################################################################
      # Redis
      ####################################################################################################

  redis-spital:
    image: "${REDIS_IMAGE}"
    container_name: "${REDIS_CONTAINER_NAME}"
    hostname: "${REDIS_HOSTNAME}"
    restart: "${REDIS_RESTART}"
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - spitalnet
    volumes:
      - redis:/data




  ####################################################################################################
  # Nginx
  ####################################################################################################
  nginx-spital:
    image: "${NGINX_IMG}"
    container_name: "${NGINX_CONTAINER_NAME}"
    restart: "${NGINX_RESTART}"
    ports:
      - "${NGINX_PORT_80}:8000"
      - "${NGINX_PORT_443}:443"
    volumes:
      - ./:/var/www
      - ./development/nginx:/etc/nginx/conf.d
    networks:
      - spitalnet



  ####################################################################################################
  # MinIO Storage
  ####################################################################################################

  storage-minio:
    image: "${MINIO_IMAGE:-minio/minio}"
    restart: "${MINIO_RESTART:-always}"
    container_name: "${MINIO_CONTAINER_NAME}"
    command: ${MINIO_COMMAND:-server /var/lib/minio/data --console-address ":9001"}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    networks:
      - spitalnet
    volumes:
      - "storage:/var/lib/minio/data"
    environment:
      - "MINIO_HOST=${MINIO_HOST:-localhost}"
      - "MINIO_CONSOLE_URL=${MINIO_CONSOLE_URL:-http://localhost:9001}"
      - "MINIO_API_URL=${MINIO_API_URL:-http://localhost:9000}"
      - "MINIO_ROOT_USER=${MINIO_ROOT_USER}"
      - "MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}"
      - "MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minio-admin-1}"
      - "MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin-1}"
      - "MINIO_DATA_DIR=${MINIO_DATA_DIR:-/var/lib/minio/data}"
      - "MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-public-bucket}"
      - "MINIO_BROWSER=on"
      - "MINIO_DOMAIN=${MINIO_DOMAIN:-localhost}"
      - "MINIO_REGION_NAME=${MINIO_REGION_NAME:-ir-arvan-1}"
      - "MINIO_PROMETHEUS_AUTH_TYPE=public"


